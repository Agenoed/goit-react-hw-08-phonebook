{"version":3,"file":"static/js/57.62187ff9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","redux/contacts/selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"formName\":\"Form_formName__by7Sx\",\"formNumber\":\"Form_formNumber__ggvL9\",\"formBtn\":\"Form_formBtn__u8Ete\"};","export const getStatusFilter = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { Form, Field } from 'formik';\nimport { Formik, ErrorMessage } from 'formik';\nimport css from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <p>{message}</p>} />;\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const addContacts = (value, { resetForm }) => {\n    if (\n      contacts.some(\n        ({ name }) => name.toLowerCase() === value.name.toLowerCase()\n      )\n    ) {\n      alert(`${value.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(value));\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={addContacts}>\n      <Form className={css.form}>\n        <label className={css.formLabel} htmlFor=\"name\">\n          Name\n          <Field\n            className={css.formName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n        </label>\n        <label className={css.formLabel} htmlFor=\"number\">\n          Number\n          <Field\n            className={css.formNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Number\"\n            required\n          />\n          <FormError name=\"number\" />\n        </label>\n        <button className={css.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListDeleteBtn\":\"ContactListItem_contactListDeleteBtn__cCYA9\"};","import { PropTypes } from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport default function ContactListItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.contactListItem}>\n      {name}: {number}\n      <button\n        className={css.contactListDeleteBtn}\n        type=\"button\"\n        onClick={() => handleDelete(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getStatusFilter } from 'redux/contacts/selectors';\n\nconst visibleContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n\n  const filteredData = visibleContacts(contacts, filter);\n  return (\n    <ul>\n      {filteredData.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterName\":\"Filter_filterName__Y2kKA\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { getStatusFilter } from 'redux/contacts/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n\n  const handleChange = event => {\n    dispatch(setStatusFilter(event.currentTarget.value));\n  };\n  return (\n    <label className={css.filterLabel} htmlFor=\"filter\">\n      Find contacts by name\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"Write name for search\"\n      />\n    </label>\n  );\n}\n","import { ContactForm } from '../components/Form/Form';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getStatusFilter,\n  getContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 || filter || isLoading ? (\n        <Filter />\n      ) : (\n        <p>Contacts is empty!</p>\n      )}\n      {isLoading && !error && <p>Loading data...</p>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["getStatusFilter","state","filter","getContacts","contacts","items","getIsLoading","isLoading","getError","error","FormError","name","render","message","initialValues","number","ContactForm","dispatch","useDispatch","useSelector","onSubmit","value","resetForm","some","toLowerCase","alert","addContact","className","css","htmlFor","type","pattern","title","placeholder","required","ContactListItem","id","onClick","deleteContact","ContactList","filteredData","contact","includes","visibleContacts","map","Filter","onChange","event","setStatusFilter","currentTarget","Contacts","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","length"],"sourceRoot":""}